# Задание 7

s = 'We are not what we should be!\nWe are not what we need to be.\nBut at least we are not what we used to be\n(' \
    'Football Coach)'

print(s)

# 1. Посчитайте сколько слов в тексте

print('--- 1 ---')

print('Number of words:', len(s.split()))  # Количество элементов в списке который возвращает метод split().

# 2. Удалите знаки препинания в списке слов (пройдитесь циклом все слова и удалите методом strip знаки препинания).

print('--- 2 ---')

s2 = s.split()  # Создаем список слов из строки.

for i in range(len(s2)):  # Перебираем все элементы списка.
    s2[i] = s2[i].strip('!"#$%&\'()*+, -./:;<=>?@[\\]^_`{|}~')  # Удаляем все возможные знаки пунктуации.

print(s2)

# 3. Выведите слова в алфавитном порядке (найдите метод списка, который сортирует).

print('--- 3 ---')

s2.sort()  # Воспользуемся готовым списком слов без знаков пунктуации.

print(' '.join(s2))

# 4. Посчитать, сколько раз встречается каждое слово. Слова с большой буквы и с маленькой это все равно одно и тоже
# слово. (Подсказка: создавать словарь, где ключи — это слова из текста, а в значениях подсчитываем количество
# «встречаний» этого слова)

print('--- 4 ---')

d = {}  # Словарь, в который будем добавлять пары.

for i in s2:  # Для всех элементов списка. s2 без знаков пунктуации.
    i = i.lower()  # Приводим слова к одному регистру.
    if i in d:  # Если встречаем в словаре ключ со значением элемента списка.
        d[i] += 1  # Инкремент значения по ключу.
    else:  # Ключа со значением элемента списка в словаре нет.
        d[i] = 1  # Добавляем в словарь пару - значение элемента списка как ключ и 1 как значение по этому ключу.

for i in sorted(d):  # Вывод отсортированного (для наглядности) по словам результата.
    print('word "{}" counter: {}'.format(i, d[i]))
